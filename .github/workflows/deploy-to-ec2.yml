name: Deploy to EC2

on:
  push:
    branches:
      - main

env:
  AWS_HOST: ${{ secrets.AWS_HOST }}
  AWS_USERNAME: ${{ secrets.AWS_USERNAME }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.AWS_SSH_KEY }}
          
      - name: Setup known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.AWS_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to EC2
        run: |
          # Ensure the target directory exists
          ssh ${{ secrets.AWS_USERNAME }}@${{ secrets.AWS_HOST }} "mkdir -p /home/${{ secrets.AWS_USERNAME }}/Desktop/PG_DB"

          # Copy necessary files to EC2
          scp -r ./init-scripts ${{ secrets.AWS_USERNAME }}@${{ secrets.AWS_HOST }}:/home/${{ secrets.AWS_USERNAME }}/Desktop/PG_DB/
          scp -r ./config ${{ secrets.AWS_USERNAME }}@${{ secrets.AWS_HOST }}:/home/${{ secrets.AWS_USERNAME }}/Desktop/PG_DB/
          scp ./.env ${{ secrets.AWS_USERNAME }}@${{ secrets.AWS_HOST }}:/home/${{ secrets.AWS_USERNAME }}/Desktop/PG_DB/
          scp ./docker-compose.yml ${{ secrets.AWS_USERNAME }}@${{ secrets.AWS_HOST }}:/home/${{ secrets.AWS_USERNAME }}/Desktop/PG_DB/
          scp ./setup.sh ${{ secrets.AWS_USERNAME }}@${{ secrets.AWS_HOST }}:/home/${{ secrets.AWS_USERNAME }}/Desktop/PG_DB/

          # Execute setup on EC2
          ssh ${{ secrets.AWS_USERNAME }}@${{ secrets.AWS_HOST }} "
            # Ensure Docker and Docker Compose are installed
            if ! command -v docker &> /dev/null; then
              echo 'Docker not found, installing...'
              sudo apt-get update
              sudo apt-get install -y docker.io
              sudo systemctl start docker
              sudo systemctl enable docker
            fi
            
            if ! command -v docker-compose &> /dev/null; then
              echo 'Docker Compose not found, installing...'
              sudo curl -L \"https://github.com/docker/compose/releases/download/v2.5.0/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
            fi
            
            # Add user to docker group if not already
            if ! groups \$USER | grep -q docker; then
              sudo usermod -aG docker \$USER
              echo 'Added user to docker group, you may need to log out and back in for this to take effect'
            fi
            
            # Run the setup script
            cd /home/${{ secrets.AWS_USERNAME }}/Desktop/PG_DB
            chmod +x setup.sh
            
            # Stop and remove existing containers if they exist
            docker-compose down
            
            # Start up the new containers
            docker-compose up -d
            
            echo 'PostgreSQL Docker deployment completed'
          "